{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GLENDA\\\\Desktop\\\\cursos\\\\Certifield tech developer\\\\Front3\\\\fe3-final-main\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState, useReducer } from \"react\";\nimport { initialState, reducer } from \"./reducer.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContextGlobal = /*#__PURE__*/createContext();\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const providerValue = {\n    state,\n    dispatch\n  }; //const [providerState, setProviderState] = useState({\n  //   data: state.data,\n  // theme: state.theme,\n  //  setData: (item) => {\n  //  dispatch({ type: actions.setData, payload: item });\n  //},\n  //setDarkTheme: () => {\n  // dispatch({ type: actions.setThemeDark });\n  //},\n  // setLightTheme: () => {\n  // dispatch({ type: actions.themeLight });\n  //     },\n  //  });\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => res.json()).then(data => providerState.setData(providervState => ({ ...prevState,\n      data: data\n    })));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: providerValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useReducer","initialState","reducer","ContextGlobal","ContextProvider","children","state","dispatch","providerValue","fetch","then","res","json","data","providerState","setData","providervState","prevState"],"sources":["C:/Users/GLENDA/Desktop/cursos/Certifield tech developer/Front3/fe3-final-main/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useEffect, useState, useReducer } from \"react\";\nimport {  initialState, reducer } from \"./reducer.service\";\n\n\nexport const ContextGlobal = createContext();\n\n\nexport const ContextProvider= ({children})=> {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const providerValue = { state, dispatch };\n  //const [providerState, setProviderState] = useState({\n   //   data: state.data,\n     // theme: state.theme,\n    //  setData: (item) => {\n      //  dispatch({ type: actions.setData, payload: item });\n      //},\n      //setDarkTheme: () => {\n       // dispatch({ type: actions.setThemeDark });\n    \n      //},\n     // setLightTheme: () => {\n       // dispatch({ type: actions.themeLight });\n  \n //     },\n  //  });\n\n    useEffect(() => {\n      fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then((res) => res.json())\n        .then((data) => providerState.setData((providervState) => ({\n          ...prevState,\n          data: data\n        })));\n    }, []);\n    \n    return (\n    <ContextGlobal.Provider value={providerValue}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n  }"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAAUC,YAAV,EAAwBC,OAAxB,QAAuC,mBAAvC;;AAGA,OAAO,MAAMC,aAAa,gBAAGN,aAAa,EAAnC;AAGP,OAAO,MAAMO,eAAe,GAAE,QAAe;EAAA;;EAAA,IAAd;IAACC;EAAD,CAAc;EAC3C;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,UAAU,CAACE,OAAD,EAAUD,YAAV,CAApC;EACA,MAAMO,aAAa,GAAG;IAAEF,KAAF;IAASC;EAAT,CAAtB,CAH2C,CAI3C;EACC;EACE;EACD;EACE;EACA;EACA;EACC;EAED;EACD;EACE;EAEN;EACC;;EAEET,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUC,aAAa,CAACC,OAAd,CAAuBC,cAAD,KAAqB,EACzD,GAAGC,SADsD;MAEzDJ,IAAI,EAAEA;IAFmD,CAArB,CAAtB,CAFlB;EAMD,CAPQ,EAON,EAPM,CAAT;EASA,oBACA,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEL,aAA/B;IAAA,UACGH;EADH;IAAA;IAAA;IAAA;EAAA,QADA;AAKD,CAlCI;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}